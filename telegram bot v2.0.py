from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram import types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = '1946562538:AAFfw_CFeOcDRfoLpQdLeWc_4-Y5zvsjh3A'
price = ''
suma = 0
star = "‚ú®"
lover = "ü•∞"
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–ü—Ä–∞–π—Å","–ü—Ä–æ –Ω–∞—Å","–ö–æ—Ä–∑–∏–Ω–∞"]
    keyboard.add(*buttons)
    await message.answer("–ü—Ä–∏–≤—ñ—Ç‚ú®\n–Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –æ–±—Ä–∞—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫\n–¥–ª—è —Ç–µ–±–µ –∞–±–æ —Ç–≤–æ—ó—Ö –±–ª–∏–∑—å–∫–∏—Ö" + lover, reply_markup=keyboard)

@dp.message_handler(lambda message: message.text in ["–ü—Ä–∞–π—Å","–ü–æ—à—É–∫–∞—é —â–µ"])
async def registration(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–ë–æ–º–±–æ—á–∫–∏","–¢–≤–µ—Ä–¥–∞ –ø—ñ–Ω–∞","–ú–æ—Ä—Å—å–∫–∞ —Å—ñ–ª—å","–°–∫—Ä–∞–±–∏","–ë–æ–∫—Å–∏"]
    keyboard.add(*buttons)
    await message.answer("–û–±–µ—Ä–∏ —â–æ –±—É–¥–µ —É —Ç–≤–æ—î–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ë–æ–º–±–æ—á–∫–∏")
async def registration(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–ó –º–æ—Ä—Å—å–∫–æ—é —Å—ñ–ª–ª—é", "–ë–æ–º–±–æ—á–∫–∞ –∑ –ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–º", "–ü–æ–Ω—á–∏–∫", "–°–µ—Ä—Ü–µ", "–ë–æ–º–±–æ—á–∫–∞ –Ø–ª–∏–Ω–∫–∞", "–ú—ñ–Ω—ñ-—á–∞—à–∞", "–í—ñ–¥—å–º–∏–Ω –∫–æ—Ç–µ–ª", "–ß–∞—à–∞ –∫–æ—Ö–∞–Ω–Ω—è", "–•–µ–ª–ª–æ–≤—ñ–Ω—Å—å–∫–∞ –Ω—ñ—á"
        ]
    keyboard.add(*buttons)
    await message.answer("–û—Å—å –≤–∏–¥–∏ –±–æ–º–±–æ—á–æ–∫ —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ó –º–æ—Ä—Å—å–∫–æ—é —Å—ñ–ª–ª—é")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/5rqh9tcrg3e0p0a/%D0%B1%D0%BE%D0%BC%D0%B1%D0%BE%D1%87%D0%BA%D0%B0%20%D0%B7%20%D0%BC%D0%BE%D1%80%D1%81%D1%8C%D0%BA%D0%BE%D1%8E%20%D1%81%D1%96%D0%BB%D0%BB%D1%8E.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –∑ –º–æ—Ä—Å—å–∫–æ—é —Å—ñ–ª–ª—é)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ë–æ–º–±–æ—á–∫–∞ –∑ –ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–º")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/z7209hdjrwbwo09/%D0%B1%D0%BE%D0%BC%D0%B1%D0%BE%D1%87%D0%BA%D0%B0%20%D0%B7%20%D0%BF%D0%B5%D1%80%D0%BB%D0%B0%D0%BC%D1%83%D1%82%D1%80%D0%BE%D0%BC%20.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –∑ –ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–º)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ü–æ–Ω—á–∏–∫")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/nvccg84puzfsqri/%D0%B1%D0%BE%D0%BC%D0%B1%D0%BE%D1%87%D0%BA%D0%B0%20%D0%BF%D0%BE%D0%BD%D1%87%D0%B8%D0%BA.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –ü–æ–Ω—á–∏–∫)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–°–µ—Ä—Ü–µ")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/pkqa1gckuqc22xp/%D0%B1%D0%BE%D0%BC%D0%B1%D0%BE%D1%87%D0%BA%D0%B0%20%D1%81%D0%B5%D1%80%D1%86%D0%B5.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –°–µ—Ä—Ü–µ)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ë–æ–º–±–æ—á–∫–∞ —è–ª–∏–Ω–∫–∞")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/bceitytlbiban9x/%D0%B1%D0%BE%D0%BC%D0%B1%D0%BE%D1%87%D0%BA%D0%B0%20%D1%8F%D0%BB%D0%B8%D0%BD%D0%BA%D0%B0.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –Ø–ª–∏–Ω–∫–∞)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ú—ñ–Ω—ñ-—á–∞—à–∞")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/362gqgt65jzyj06/%D0%BC%D1%96%D0%BD%D1%96-%D0%BC%D1%96%D0%BD%D1%96%20%D1%87%D0%B0%D1%88%D0%B0.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –ú—ñ–Ω—ñ-—á–∞—à–∞)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–í—ñ–¥—å–º–∏–Ω –∫–æ—Ç–µ–ª")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/hwc3z6g77fq939l/%D0%BC%D1%96%D0%BD%D1%96-%D1%87%D0%B0%D1%88%D0%B0.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –í—ñ–¥—å–º–∏–Ω –∫–æ—Ç–µ–ª)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ß–∞—à–∞ –∫–æ—Ö–∞–Ω–Ω—è")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/2p0jx0i818rp69r/%D1%87%D0%B0%D1%88%D0%B0%20%D0%BA%D0%BE%D1%85%D0%B0%D0%BD%D0%BD%D1%8F.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –ß–∞—à–∞ –∫–æ—Ö–∞–Ω–Ω—è)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–•–µ–ª–ª–æ–≤—ñ–Ω—Å—å–∫–∞ –Ω—ñ—á")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/zb5pnodm8v0zwcp/%D1%85%D0%B5%D0%BB%D0%BB%D0%BE%D0%B2%D1%96%D1%96%D0%BD%D1%81%D1%8C%D0%BA%D0%B0%20%D0%BD%D1%96%D1%87.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –•–µ–ª–ª–æ–≤—ñ–Ω—Å—å–∫–∞ –Ω—ñ—á)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–¢–≤–µ—Ä–¥–∞ –ø—ñ–Ω–∞")
async def registration(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–ó—ñ—Ä–∫–∞", "–Ø–ª–∏–Ω–∫–∞", "–¶—É–∫–µ—Ä–∫–∞"
        ]
    keyboard.add(*buttons)
    await message.answer("–û—Å—å –≤–∏–¥–∏ —Ç–≤–µ—Ä–¥–æ—ó –ø—ñ–Ω–∏ —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ó—ñ—Ä–∫–∞")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/x7681ark3k6pppf/%D0%B7%D1%96%D1%80%D0%BA%D0%B8.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (—Ç–≤–µ—Ä–¥—É –ø—ñ–Ω—É –ó—ñ—Ä–∫–∞)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–Ø–ª–∏–Ω–∫–∞")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/x7y6szapg2l0ljt/%D1%82%D0%B2%D0%B5%D1%80%D0%B4%D0%B0%20%D0%BF%D1%96%D0%BD%D0%B0%20%D1%8F%D0%BB%D0%B8%D0%BD%D0%BA%D0%B0.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (—Ç–≤–µ—Ä–¥—É –ø—ñ–Ω—É –Ø–ª–∏–Ω–∫–∞)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–¶—É–∫–µ—Ä–∫–∞")
async def registration(message: types.Message):
    await bot.send_photo(message.from_user.id, "https://www.dropbox.com/s/jznze9z082cq1y0/%D1%82%D0%B2%D0%B5%D1%80%D0%B4%D0%B0%20%D0%BF%D1%96%D0%BD%D0%B0%20%D1%86%D1%83%D0%BA%D0%B5%D1%80%D0%BA%D0%B0.jpg?dl=0")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–í –∫–æ—Ä–∑–∏–Ω—É (—Ç–≤–µ—Ä–¥—É –ø—ñ–Ω—É –¶—É–∫–µ—Ä–∫–∞)", "–ü–æ—à—É–∫–∞—é —â–µ"
        ]
    keyboard.add(*buttons)
    await message.answer("–ë–µ—Ä–µ–º–æ?)", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ú–æ—Ä—Å—å–∫–∞ —Å—ñ–ª—å")
async def registration(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–°—Ç–∞–Ω–¥–∞—Ä—Ç", "–ó –ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–º", "–ó –ø—ñ–Ω–æ—Ä–æ–∑—á–∏–Ω–Ω–∏–∫–æ–º"
        ]
    keyboard.add(*buttons)
    await message.answer("–û—Å—å –≤–∏–¥–∏ –º–æ—Ä—Å—å–∫–æ—ó —Å–æ–ª—ñ —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–°–∫—Ä–∞–±–∏")
async def registration(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–†–∞—Ñ–∞–µ–ª–ª–æ","–£—Ç—Ä–æ–º–±–æ–≤–∞–Ω–∏–π"
        ]
    keyboard.add(*buttons)
    await message.answer("–û—Å—å –≤–∏–¥–∏ —Å–∫—Ä–∞–±—ñ–≤ —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ë–æ–∫—Å–∏")
async def registration(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–ë–æ–∫—Å–∏"
    ]
    keyboard.add(*buttons)
    await message.answer("–û—Å—å –≤–∏–¥–∏ –±–æ–∫—Å—ñ–≤ —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –∑ –º–æ—Ä—Å—å–∫–æ—é —Å—ñ–ª–ª—é)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 60
    price += " (–±–æ–º–±–æ—á–∫–∞ –∑ –º–æ—Ä—Å—å–∫–æ—é —Å—ñ–ª–ª—é) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –∑ –ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–º)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 45
    price += " (–±–æ–º–±–æ—á–∫–∞ –∑ –ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–º) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –ü–æ–Ω—á–∏–∫)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 65
    price += " (–±–æ–º–±–æ—á–∫–∞ –ü–æ–Ω—á–∏–∫) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –°–µ—Ä—Ü–µ)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 40
    price += " (–±–æ–º–±–æ—á–∫–∞ –°–µ—Ä—Ü–µ) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –Ø–ª–∏–Ω–∫–∞)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 80
    price += " (–±–æ–º–±–æ—á–∫–∞ –Ø–ª–∏–Ω–∫–∞) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –ú—ñ–Ω—ñ-—á–∞—à–∞)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 45
    price += " (–±–æ–º–±–æ—á–∫–∞ –ú—ñ–Ω—ñ-—á–∞—à–∞) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –í—ñ–¥—å–º–∏–Ω –∫–æ—Ç–µ–ª)")
async def registration(message: types.Message):
    global price
    global suma
    suma += 45
    price += " (–±–æ–º–±–æ—á–∫–∞ –í—ñ–¥—å–º–∏–Ω –∫–æ—Ç–µ–ª) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –ß–∞—à–∞ –∫–æ—Ö–∞–Ω–Ω—è)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 90
    price += " (–±–æ–º–±–æ—á–∫–∞ –ß–∞—à–∞ –∫–æ—Ö–∞–Ω–Ω—è) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (–±–æ–º–±–æ—á–∫—É –•–µ–ª–ª–æ–≤—ñ–Ω—Å—å–∫–∞ –Ω—ñ—á)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 80
    price += " (–±–æ–º–±–æ—á–∫–∞ –•–µ–ª–ª–æ–≤—ñ–Ω—Å—å–∫–∞ –Ω—ñ—á) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (—Ç–≤–µ—Ä–¥—É –ø—ñ–Ω—É –ó—ñ—Ä–∫–∞)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 30
    price += " (—Ç–≤–µ—Ä–¥–∞ –ø—ñ–Ω–∞ –ó—ñ—Ä–∫–∞) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (—Ç–≤–µ—Ä–¥—É –ø—ñ–Ω—É –Ø–ª–∏–Ω–∫–∞)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 30
    price += " (—Ç–≤–µ—Ä–¥–∞ –ø—ñ–Ω–∞ –Ø–ª–∏–Ω–∫–∞) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–í –∫–æ—Ä–∑–∏–Ω—É (—Ç–≤–µ—Ä–¥—É –ø—ñ–Ω—É –¶—É–∫–µ—Ä–∫–∞)")
async def registration(message: types.Message):
    global suma
    global price
    suma += 40
    price += " (—Ç–≤–µ—Ä–¥–∞ –ø—ñ–Ω–∞ –¶—É–∫–µ—Ä–∫–∞) "
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == '–ü—Ä–æ –Ω–∞—Å')
async def cmd_inline_url(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="instagram - Kings_Bombs", url="https://instagram.com/kings_bombs_?utm_medium=copy_link"),
        types.InlineKeyboardButton(text="tik tok - Kings_Bombs", url="https://vm.tiktok.com/ZMLFrw4j8/")
    ]
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*buttons)
    await message.answer("–ù–∞—à—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤ —Å–æ—Ü. –º–µ—Ä–µ–∂–∞—Ö", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–ö–æ—Ä–∑–∏–Ω–∞")
async def registration(message: types.Message):
    global price
    global suma
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–û—á–∏—Å—Ç–∏—Ç–∏","–ó–∞–º–æ–≤–∏—Ç–∏"
    ]
    keyboard.add(*buttons)
    await message.answer("–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma), reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "–û—á–∏—Å—Ç–∏—Ç–∏")
async def registration(message: types.Message):
    global price
    global suma
    global many
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))
    await bot.send_message(message.from_user.id, "–û—á–∏—â–µ–Ω–Ω—è...")
    price = ""
    many = 0
    suma = 0
    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

@dp.message_handler(lambda message: message.text == "–ó–∞–º–æ–≤–∏—Ç–∏")
async def registration(message: types.Message):
    global price
    global suma
    await bot.send_message(337646093, "====================================")
    await bot.send_message(337646093, "–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: " + price)
    await bot.send_message(337646093, "—Ü—ñ–Ω–æ—é: "+ str(suma))
    await bot.send_message(337646093, "@"+message.from_user.username)
    await bot.send_message(337646093, "====================================")

    await bot.send_message(message.from_user.id, "–í–∏ –∑–∞–º–æ–≤–∏–ª–∏: "+price+"\n–Ω–∞ —Å—É–º—É: "+str(suma))

    await bot.send_message(367471403, "====================================")
    await bot.send_message(367471403, "–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: " + price)
    await bot.send_message(367471403, "—Ü—ñ–Ω–æ—é: "+ str(suma))
    await bot.send_message(367471403, "@"+message.from_user.username)
    await bot.send_message(367471403, "====================================")

@dp.message_handler()
async def echo_message(msg: types.Message):
    await bot.send_message(msg.from_user.id, "–Ω–∞–ø–∏—à–∏ /start")

if __name__ == '__main__':
    executor.start_polling(dp)